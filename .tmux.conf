# Ctrl-a as prefix instead of Ctrl-b
set -g prefix C-a
unbind C-b
# have `C-a C-a` send C-a keypress to the current window
bind C-a send-prefix

# Smart pane switching with awareness of vim splits
bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'


## Resize pane shortcuts
#bind -r h select-pane -L
#bind -r j select-pane -D
#bind -r k select-pane -U
#bind -r l select-pane -R

bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

# Have new windows and panes open in the current directory
bind - split-window -c '#{pane_current_path}' -v
bind s split-window -c '#{pane_current_path}' -v
bind |   split-window -c '#{pane_current_path}' -h
bind v   split-window -c '#{pane_current_path}' -h
bind c   new-window   -c '#{pane_current_path}'

# <Enter> in copy mode puts the text in system clipboard
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'

# switch to a session that start with the given name
bind S command-prompt -p session: "run-shell 'tmux-switch-session \"%%\"'"

bind v command-prompt -p open:  "new-window -a -n '%1' -c '#{pane_current_path}' 'bundle open %1'"
bind m command-prompt -p man:   "split-window -h 'man %1'"
bind g new-window -a -n log -c '#{pane_current_path}' 'tail -f log/development.log'

# source this file after changes
bind R source-file ~/.tmux.conf

# enable for iTerm (Terminal.app doesn't have mouse support)
set -g mouse-resize-pane on

# Faster escape sequences (default is 500ms).
# This helps when exiting insert mode in Vim: http://superuser.com/a/252717/65504
set -s escape-time 50

# start numbering windows from 1 instead of zero
set -g base-index 1

# syntax highlighting in Vim
set -g default-terminal "screen-256color"


# enable clipboard  http://goo.gl/DN82E
# enable RubyMotion http://goo.gl/WDlCy
set -g default-command "reattach-to-user-namespace -l zsh"

# disable programs changing window names via terminal escape sequence
set-window-option -g allow-rename off


# status bar
set -g status-utf8 on
set -g status-fg colour8
set -g status-bg colour234
# current session
set -g status-left ' #S '
set -g status-left-length 15
set -g status-left-fg colour229
set -g status-left-bg colour166

# window list
set -g window-status-format "#[fg=colour8] #I #[fg=colour231]#W#[fg=colour166]#F "
set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231]#W#[fg=colour234]#F "
set -g window-status-separator ""
# battery and pomo status <http://git.io/zMf0IA>
set -g status-right ' #(battery) '
set -g status-interval 15

# disable possibly set visual editor
set-environment -gu GEM_EDITOR

# vim:ft=conf


# Movements
 
  # C-h/j/k/l           ->  switch to pane in the given direction
  # C-\\                ->  toggle between last active panes

# Under tmux prefix `C-a`:
  
  # C-l                 ->  Clear terminal
  # S                   ->  switch to a session that starts with given name, or switch to the last session if no name given
  # m                   ->  open man page in vertical split
  # g                   ->  tail log/development.log in a new window
  # R                   ->  Source ~/.tmux.conf after changes

## Regular tmux Key bindings

  # %                   ->  vertical split
  # "                   ->  horizontal split
  # !                   ->  break pane into new window
  # c                   ->  new window
 
  # o                   ->  select next pane
  # {                   ->  swap pane with previous
  # }                   ->  swap pane with next
  # n                   ->  next window
  # p                   ->  previous window
  # )                   ->  next session
  # (                   ->  previous session
  # ;                   ->  select previously active pane
  # l                   ->  select previously active window

  # s                   ->  interactive session & window browser
  # w                   ->  interactive window browser

  # $                   ->  rename session
  # ,                   ->  rename window

  # :                   ->  command prompt
  # d                   ->  detach
  # f                   ->  search text in open windows

  # [                   ->  copy mode
  # ]                   ->  paste buffer

  # #                     -> list buffers
  # -                     -> delete buffer
